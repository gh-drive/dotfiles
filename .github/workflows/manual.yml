---
name: Manual
run-name: build-${{ inputs.code_name }}-${{ inputs.uid }}:${{ inputs.gid }}

on:
  workflow_dispatch:
    inputs:
      base_image:
        required: true
        description: os base image
        type: choice
        options:
          - ubuntu
          - debian
      code_name:
        required: true
        description: os code name
        type: string
        default: noble
      uid:
        required: true
        description: user id
        type: number
        default: 1000
      gid:
        required: true
        description: group id
        type: number
        default: 1000

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    name: build
    steps:
      - uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWD }}

      - name: Login to GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build
        timeout-minutes: 120
        uses: docker/build-push-action@master
        with:
          context: .
          file: manual.Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            CODE_NAME=${{ inputs.code_name }}
            USER_ID=${{ inputs.uid }}
            GROUP_ID=${{ inputs.gid }}
          secrets: |
            "DOTFILES_REPO=${{ secrets.DOTFILES_REPO }}"
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:noble-cache
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/devcontainer:${{ inputs.code_name }}-${{ inputs.uid }}-${{ inputs.gid }}

  sync:
    runs-on: ubuntu-latest
    name: sync image
    needs: build
    steps:
      - name: Login to ACR
        uses: docker/login-action@master
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PAT }}
          registry: ${{ secrets.ACR_REGISTRY }}

      - name: Sync to ACR
        run: |-
          skopeo sync --insecure-policy --retry-times 3 --src docker --dest docker ${{ secrets.DOCKER_USERNAME }}/devcontainer ${{ secrets.ACR_URI }}
