---
name: Linux

on:
  workflow_dispatch:
  push:
    paths:
      - Dockerfile
      - .github/workflows/linux.yml
  schedule:
    - cron: 45 23 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.trigger-test.outputs.action }}
    steps:
      - uses: actions/checkout@main
      - name: set meta info
        run: |
          echo "remote_sha=$(git ls-remote ${{ secrets.DOTFILES_REPO }} HEAD | awk '{ print $1}')" >> $GITHUB_ENV

      - name: check if we need to trigger a test
        id: trigger-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh api /repos/${{github.repository}}/branches/manifest-linux > /dev/null 2>&1; then
          echo "branch manifest not found. trigger a test"
          echo "action=trigger" >> "$GITHUB_OUTPUT"
          else
          last_sha=$(curl -sSLf https://raw.githubusercontent.com/${{github.repository}}/manifest-linux/manifest.json | jq -r '.remote_sha')
          if [ "$last_sha" != "${{ env.remote_sha }}" ]; then
          echo "remote_sha changed. trigger a test"
          echo "action=trigger" >> "$GITHUB_OUTPUT"
          else
          echo "remote_sha not changed. skip"
          echo "action=skip" >> "$GITHUB_OUTPUT"
          fi
          fi

  build:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.action == 'trigger'
    strategy:
      fail-fast: false
      matrix:
        include:
          - {base_image: ubuntu, image_tag: latest}
          - {base_image: ubuntu, image_tag: rolling}
          - {base_image: ubuntu, image_tag: devel}
          - {base_image: debian, image_tag: unstable-slim}
          - {base_image: debian, image_tag: stable-slim}
          - {base_image: debian, image_tag: oldstable-slim}
          - {base_image: debian, image_tag: oldoldstable-slim}
    name: ${{ matrix.base_image }}-${{ matrix.image_tag }}
    steps:
      - uses: actions/checkout@main

      - name: test dotfiles
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: false
          provenance: false
          build-args: |
            base_image=${{ matrix.base_image }}
            image_tag=${{ matrix.image_tag }}
          secrets: |
            "DOTFILES_REPO=${{ secrets.DOTFILES_REPO }}"

  manifest:
    runs-on: ubuntu-latest
    needs: build
    name: push manifest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@main

      - name: set meta info
        run: |
          echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "remote_sha=$(git ls-remote ${{ secrets.DOTFILES_REPO }} HEAD | awk '{ print $1}')" >> $GITHUB_ENV

      - name: generate manifest
        run: |-
          mkdir public
          cat <<EOF > public/manifest.json
          {
            "os": "linux",
            "date": "${{ env.date }}",
            "remote_sha": "${{ env.remote_sha }}"
          }
          EOF
          cat public/manifest.json

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: manifest-linux
          folder: ./public
          single-commit: true
          commit-message: ${{ github.event.head_commit.message }}
